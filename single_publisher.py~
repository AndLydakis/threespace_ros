#!/usr/bin/env python
import roslib
import rospy
import tf
import tf2
import tf2_ros
import geometry_msgs.msg
import serial
import time
import math
import string
import threespace_api as tsa
from threespace_api import *
from socket import *

port = "/dev/ttyACM0"
name = "head"
try:
    rospy.loginfo("Opening "+port" with ThreeSpace API")
    device = tsa.TSWLSensor(com_port = port, baudrate=115200)
    rospy.loginfo("Works")
except:
    rospy.logerr("Failed to open "+port)
    exit()
r= rospy.Rate(10)
quat = tsa.TSWLSensor.getTaredOrientationAsQuaterinion(device)
br = tf2_ros.TransformBroadcaaster()
t = geometry_msgs.msg.TransformedStamped()
gmsg = geometry_msgs.msg.QuaternionStamped()
while not rospy.is_shutdown():
    quat = tsa.TSWLSensor.getTaredOrientationAsQuaternion(device)
    rospy.loginfo(quat)
    gmsg.header.stamp = rospy.Time.now()
    t.header.frame_id = "world"
    gmsg.quaternion.x = quat[0]
    gmsg.quaternion.y = quat[1]
    gmsg.quaternion.z = quat[2]
    gmsg.quaternion.w = quat[3]
    r.sleep()

